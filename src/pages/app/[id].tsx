import { Box, Button, Flex } from '@chakra-ui/react';
import { collection, onSnapshot, query, where } from 'firebase/firestore';
import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import { db } from '../../../firebase';
import Layout from '../../components/Layout';

const AppId: NextPage = () => {
  const router = useRouter();
  const { id } = router.query;
  const [leftImage, setLeftImage] = useState('');
  const [rightImage, setRightImage] = useState('');
  const [toggle, setToggle] = useState(true);
  const [storageImages, setStorageImages] = useState<any>([]); //データベースからイメージ画像を取得
  const [imagesArray, setImagesArray] = useState<any>([]);

  //イメージ画像データ一覧を取得
  useEffect(() => {
    const getImages = async () => {
      try {
        const q = query(
          collection(db, 'images'),
          where('postId', '==', `${id}`)
        );
        const unsub = onSnapshot(q, (querySnapshot) => {
          setStorageImages(
            querySnapshot.docs.map((doc) => ({
              ...doc.data(),
              id: doc.id,
            }))
          );
        });
      } catch (error) {
        console.log(error);
      }
    };
    getImages();
  }, [id, toggle]);

  const onStartClick = () => {
    const shuffleImages = shuffle(storageImages);
    if (leftImage === '') {
      const firstImage = shuffleImages.shift();
      firstImage && setLeftImage(firstImage.url);
    }
    if (rightImage === '') {
      const secondImage = shuffleImages.shift();
      secondImage && setRightImage(secondImage.url);
    }
    setImagesArray(shuffleImages);
    setToggle(false);
  };

  const onResetClick = () => {
    setImagesArray(storageImages);
    setLeftImage('');
    setRightImage('');
    setToggle(true);
  };

  const leftSelectClick = () => {
    const image = imagesArray.shift();
    image ? setRightImage(image.url) : setRightImage('');
  };

  const rightSelectClick = () => {
    const image = imagesArray.shift();
    image ? setLeftImage(image.url) : setLeftImage('');
  };

  //シャッフル関数
  const shuffle = ([...array]) => {
    for (let i = array.length - 1; i >= 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Layout>
        <Box as='main' w='100%' pt='70px'>
          <Flex
            mt={12}
            w='100%'
            maxW='1000px'
            mx='auto'
            justifyContent='center'
            alignItems='center'
            flexDirection='column'
          >
            <Box as='h1' textAlign='center'>
              どちらがいいですか？
              <br />
              好きな方をクリックしてください
            </Box>
            <Box>
              {toggle && (
                <Button mt={6} onClick={onStartClick}>
                  スタート
                </Button>
              )}
              {(!leftImage || !rightImage) && !toggle && (
                <Button mt={6} onClick={onResetClick}>
                  リセット
                </Button>
              )}
            </Box>
            <Flex mt={6} w='100%' justifyContent='center'>
              {leftImage && (
                <Flex
                  justifyContent='center'
                  cursor='pointer'
                  onClick={leftSelectClick}
                  width='100%'
                >
                  <img src={leftImage} alt={''} width={500} height={500} />
                </Flex>
              )}
              {rightImage && (
                <Flex
                  justifyContent='center'
                  cursor='pointer'
                  onClick={rightSelectClick}
                  width='100%'
                >
                  <img src={rightImage} alt={''} width={500} height={500} />
                </Flex>
              )}
            </Flex>
          </Flex>
        </Box>
      </Layout>
    </>
  );
};

export default AppId;
